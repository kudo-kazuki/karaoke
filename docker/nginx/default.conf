# 例: http://localhost:8082 で公開（compose の ports 設定に依存）

server {
    listen 80;
    server_name localhost;

    # ドキュメントルート（フレームワークを使い始めたら /var/www/html/public に変えてOK）
    root /var/www/html;
    index index.php index.html index.htm;

    # 大きめのアップロードも許可（php.ini に合わせる）
    client_max_body_size 128m;

    # 開発でのパフォーマンス/互換
    sendfile off;                  # ボリュームでの変更反映を安定させる
    charset utf-8;

    # APIルートは index.php に通す
    location /api/ {
        try_files $uri /api/index.php?$query_string;
    }


    location ~ ^/api/.+\.php$ {
        include fastcgi_params;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # 静的ファイルはそのまま返す
    location / {
        # 素のPHP想定: まずはファイルを探し、なければ 404
        try_files $uri $uri/ =404;
    }

    # PHPファイルを PHP-FPM へ
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass php:9000;  # docker-compose のサービス名:ポート
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # 実体のない PHP へアクセスされたら 404
        try_files $uri =404;

        # タイムアウト（必要に応じて調整）
        fastcgi_connect_timeout 60s;
        fastcgi_send_timeout 120s;
        fastcgi_read_timeout 120s;

        # バッファ（大きめのレスポンス対策）
        fastcgi_buffer_size 32k;
        fastcgi_buffers 8 32k;
    }

    # .ht* などへの直接アクセスは拒否（Apache 用の設定ファイルなど）
    location ~ /\.ht {
        deny all;
    }

    # キャッシュ系（静的ファイルを軽くキャッシュ）※開発なら弱めに
    location ~* \.(?:css|js|jpg|jpeg|gif|png|svg|ico|woff2?|ttf|eot)$ {
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
        try_files $uri =404;
    }

    # 簡単なセキュリティヘッダ（必要なら調整）
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";

    # ログ
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log warn;
}
